name: Build & Push Docker image

on:
  push:
    branches: [ "develop", "main" ]   # se ejecuta cuando hay push a develop o main
  workflow_dispatch:                   # permite lanzarlo a mano desde Actions

jobs:
  docker:
    runs-on: ubuntu-latest             # VM Ubuntu donde corren los pasos

    steps:
      - name: Checkout
        uses: actions/checkout@v4      # baja el código del repo (lee el Dockerfile)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        # Buildx = builder moderno de Docker (mejor caché)

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}  # <- secret con "gema284"
          password: ${{ secrets.DOCKERHUB_TOKEN }}     # <- secret con tu access token

      - name: Choose tags
        id: vars
        shell: bash
        run: |
          REPO="${{ secrets.DOCKERHUB_USERNAME }}/codigo-abisal-server-api"
          SHA="${GITHUB_SHA::7}"      # commit corto (tag inmutable)
          BR="${GITHUB_REF_NAME}"     # nombre de la rama (develop o main)

          # develop -> :dev y :SHA
          TAGS="$REPO:dev,$REPO:$SHA"

          # main -> :main y :SHA
          if [ "$BR" = "main" ]; then
            TAGS="$REPO:main,$REPO:$SHA"
          fi

          echo "tags=$TAGS" >> "$GITHUB_OUTPUT"

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .                   # carpeta con tu Dockerfile (raíz)
          file: ./Dockerfile           # ruta al Dockerfile
          push: true                   # construye y SUBE la imagen a Docker Hub
          tags: ${{ steps.vars.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
